<script>
    const toggle = document.getElementById('toggle-theme');
    if (toggle) {{
        const currentTheme = localStorage.getItem('theme');
        if (currentTheme === 'dark') {{
            document.body.classList.add('dark');
            toggle.checked = true;
        }}
        toggle.addEventListener('change', () => {{
            document.body.classList.toggle('dark');
            localStorage.setItem('theme', document.body.classList.contains('dark') ? 'dark' : 'light');
        }});
    }}

    document.querySelectorAll('nav li').forEach((tab, index) => {{
        tab.addEventListener('click', function() {{
            document.querySelectorAll('nav li').forEach(t => t.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(tc => tc.classList.remove('active'));
            tab.classList.add('active');
            document.getElementById("tab" + index).classList.add('active');
        }});
    }});

    const themeToggle = document.createElement('button');
    themeToggle.textContent = 'ðŸŒ“ Toggle Theme';
    themeToggle.className = 'btn';
    themeToggle.style.position = 'fixed';
    themeToggle.style.top = '20px';
    themeToggle.style.right = '20px';
    document.body.appendChild(themeToggle);

    const setTheme = (dark) => {{
        document.body.classList.toggle('dark', dark);
        localStorage.setItem('theme', dark ? 'dark' : 'light');

        const plotlyFrames = document.querySelectorAll("iframe");
        plotlyFrames.forEach(iframe => {{
            iframe.contentWindow?.Plotly?.relayout?.(
                iframe.contentWindow.document.querySelector("div.js-plotly-plot"),
                {{ template: dark ? "plotly_dark" : "plotly_white" }}
            );
        }});
    }};

    const savedTheme = localStorage.getItem('theme') === 'dark';
    setTheme(savedTheme);

    themeToggle.addEventListener('click', () => {{
        const darkMode = !document.body.classList.contains('dark');
        setTheme(darkMode);
    }});
</script>
